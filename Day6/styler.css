/*Mobile first approach for responsiveness*/
/*attributes to mainly analyze and to focus/understand are

display, grid-template-rows, grid-template-columns, height, width with px unit*/

/*These 5 attributes played an essential role in getting the significant visible responsiveness in this practice project*/

/*Understand why in the .container classes on diff break points and default(mobile first) breakpoint the ratio of height and width are provided so. As they are impacting the layout significantly */

/* the width and height ratio is corresponding to the grid-template-columns: and grid-template-rows: values respectively, their is a realtion between these both corresponding attributes, now you easily find this relation Dear! by looking at them and thinking logically about ratios*/

* {
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

body {
    background-color: black;
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;

}

.container {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    /*or grid-template-rows: repeat(4,1fr) */
    grid-template-columns: 1fr;
    width: 200px;
    /* width/height ratio is 1/4 here */
    height: 800px;
    gap: 10px;
    background-color: rgb(85, 130, 130);
    padding: 5px;

}

.box {
    background-color: rgb(65, 57, 22);
    border-radius: 20px;
    /* below display:flex is to align the written text in the box1...box4 to align at center vertically as well as horizontally */
    display: flex;
    justify-content: center;
    align-items: center;
    color: wheat;

}

@media screen and (min-width: 412px) {
    .container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr 1fr;
        /*or grid-template-columns: repeat(2,1fr) */
        /* and grid-template-rows: repeat(2,1fr) */
        width: 400px;/* width/height ratio is 1/1here*/
        height: 400px;
        gap: 10px;
        background-color: rgb(85, 130, 130);
        padding: 5px;

    }
}


@media screen and (min-width:1024px) {
    .container {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr;
        /*or grid-template-columns: repeat(4,1fr) */
        grid-template-rows: 1fr;
        width: 800px;
        height: 200px;
        gap: 10px;
        background-color: rgb(85, 130, 130);
        padding: 5px;
    }
}